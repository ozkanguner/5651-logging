version: '3.8'

services:
  # PostgreSQL VeritabanÄ±
  postgres:
    image: postgres:15
    container_name: loglama-postgres
    environment:
      POSTGRES_DB: loglama_db
      POSTGRES_USER: loglama_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-loglama123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - loglama-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: loglama-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - loglama-network
    restart: unless-stopped

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: loglama-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - loglama-network
    restart: unless-stopped

  # Kibana (Elasticsearch UI)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: loglama-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - loglama-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

  # Log Parser Service
  log-parser:
    build:
      context: ..
      dockerfile: docker/Dockerfile.parser
    container_name: loglama-parser
    volumes:
      - ../logs:/opt/5651-loglama/logs
      - ../config:/opt/5651-loglama/config
      - ../scripts:/opt/5651-loglama/scripts
    environment:
      - PYTHONPATH=/opt/5651-loglama
    networks:
      - loglama-network
    depends_on:
      - postgres
      - redis
      - elasticsearch
    restart: unless-stopped

  # Web Application
  web-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.web
    container_name: loglama-web
    ports:
      - "8000:8000"
    volumes:
      - ../web:/opt/5651-loglama/web
      - ../config:/opt/5651-loglama/config
    environment:
      - DATABASE_URL=postgresql://loglama_user:${POSTGRES_PASSWORD:-loglama123}@postgres:5432/loglama_db
      - REDIS_URL=redis://redis:6379/0
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - loglama-network
    depends_on:
      - postgres
      - redis
      - elasticsearch
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: loglama-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - loglama-network
    depends_on:
      - web-app
      - kibana
    restart: unless-stopped

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: loglama-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - loglama-network
    restart: unless-stopped

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: loglama-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - loglama-network
    depends_on:
      - prometheus
    restart: unless-stopped

  # Filebeat (Log Collection)
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.8.0
    container_name: loglama-filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ../logs:/var/log/hotspot:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - loglama-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  loglama-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 